substitutions:
  device_name: sonoff-dualr3-lite

esp32:
  board: esp32dev
  framework:
    type: esp-idf
    version: recommended
    sdkconfig_options:
      # Not a minimal set of options. Some I took from IDF examples on sleep, some others from examples on low power.
      CONFIG_FREERTOS_UNICORE: y
      CONFIG_FREERTOS_HZ: '1000'
      CONFIG_PM_USE_RTC_TIMER_REF: y
      CONFIG_XTAL_FREQ_40: y
      CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ: '80000000'
      CONFIG_PM_DFS_INIT_AUTO: n # we're initializing power saving options ourselves.
      CONFIG_FREERTOS_USE_TICKLESS_IDLE: y # Crucial for light sleep to work.
      CONFIG_PM_ENABLE: y # Crucial for light sleep to work.
      CONFIG_PM_SLP_IRAM_OPT: y # I hear these are important.
      CONFIG_PM_RTOS_IDLE_OPT: y
      CONFIG_ESP_WIFI_SLP_IRAM_OPT: y
      CONFIG_PM_POWER_DOWN_CPU_IN_LIGHT_SLEEP: y
      CONFIG_PM_PROFILING: y # Makes debugging easier (short gnd to gpio13 and watch logs)

external_components:
  - source: github://calebns/esphome_custom_components

esphome:
  name: ${device_name}
  friendly_name: Sonoff DualR3 Lite
  platformio_options:
    board_build.f_cpu: 80000000L # Reduce CPU speed to match HX711 sample rate

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_key
  reboot_timeout: 10min

ota:
  platform: esphome
  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  power_save_mode: high
  reboot_timeout: 10min
  on_connect:
    - switch.turn_on: light_sleep_sw
  on_disconnect:
    - switch.turn_off: light_sleep_sw

captive_portal:

switch:
  - platform: light_sleep_switch
    name: Empty switch
    id: light_sleep_sw
    internal: true

  - platform: template
    name: "Template Switch"
    id: tempswitch
    lambda: |-
        return false;
    turn_on_action:
      - lambda: return;
    turn_off_action:
      - lambda: return;
    internal: true


output:
  # Physical relay on GPIO
  - platform: gpio
    pin: GPIO26
    id: relay_1
  - platform: gpio
    pin: GPIO19
    inverted: true
    id: led

light:
  - platform: binary
    id: light_1
    name: ${device_name}
    icon: mdi:ceiling-light-multiple-outline
    restore_mode: restore_default_off
    output: relay_1

binary_sensor:
  - platform: gpio
    pin: GPIO00
    id: button
    filters:
      - invert:
      - delayed_off: 50ms
    on_press:
      - light.toggle:
          id: light_1

  - platform: gpio
    name: s1
    pin: GPIO27
    id: s1
    filters:
      - invert:
      - delayed_off: 50ms
    on_press:
      then:
        - light.toggle:
            id: light_1
        - output.turn_on:
            id: led
    on_release:
      then:
        - light.toggle:
            id: light_1
        - output.turn_off:
            id: led

interval:
  - interval: 200ms
    then:
      - switch.toggle: tempswitch

sensor:
# Extra sensor to keep track of plug uptime
- platform: uptime
  name: ${device_name}_Uptime Sensor
  filters:
    - lambda: return x / 86400;
  unit_of_measurement: "days"
  accuracy_decimals: 2
# Extra sensor for WiFi signal
- platform: wifi_signal
  name: ${device_name}_WiFi Sensor
